{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\xampp\\\\htdocs\\\\Education1\\\\edemy-react-next-online-courses-education-template\\\\edemy-static\\\\components\\\\About\\\\IntoVideo.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Link from 'next/link';\nimport ModalVideo from 'react-modal-video';\n\nvar IntoVideo = function IntoVideo() {\n  _s();\n\n  // Popup Video\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isOpen = _React$useState2[0],\n      setIsOpen = _React$useState2[1];\n\n  var openModal = function openModal() {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/video-img1.jpg\",\n          className: \"shadow\",\n          alt: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#play-video\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: function onClick(e) {\n            e.preventDefault();\n            openModal();\n          },\n          className: \"video-btn popup-youtube\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"flaticon-play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shape10\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/shape9.png\",\n          alt: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ModalVideo, {\n      channel: \"youtube\",\n      isOpen: !isOpen,\n      videoId: \"bk7McNUjWgw\",\n      onClose: function onClose() {\n        return setIsOpen(!isOpen);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(IntoVideo, \"mEi83NlPXQzy/XIDfTYWzOSvaHw=\");\n\n_c = IntoVideo;\nexport default IntoVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"IntoVideo\");","map":{"version":3,"sources":["E:/xampp/htdocs/Education1/edemy-react-next-online-courses-education-template/edemy-static/components/About/IntoVideo.js"],"names":["React","Link","ModalVideo","IntoVideo","useState","isOpen","setIsOpen","openModal","e","preventDefault"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACpB;AADoB,wBAEKH,KAAK,CAACI,QAAN,CAAe,IAAf,CAFL;AAAA;AAAA,MAEhBC,MAFgB;AAAA,MAERC,SAFQ;;AAGpB,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAFD;;AAGA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,wBAAT;AAAkC,UAAA,SAAS,EAAC,QAA5C;AAAqD,UAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ,eAKI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,aAAX;AAAA,+BACI;AACI,UAAA,OAAO,EAAE,iBAAAG,CAAC,EAAI;AAACA,YAAAA,CAAC,CAACC,cAAF;AAAoBF,YAAAA,SAAS;AAAG,WADnD;AAEI,UAAA,SAAS,EAAC,yBAFd;AAAA,iCAII;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eALJ,eAcI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAK,UAAA,GAAG,EAAC,oBAAT;AAA8B,UAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAqBI,QAAC,UAAD;AACI,MAAA,OAAO,EAAC,SADZ;AAEI,MAAA,MAAM,EAAE,CAACF,MAFb;AAGI,MAAA,OAAO,EAAC,aAHZ;AAII,MAAA,OAAO,EAAE;AAAA,eAAMC,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA;AAJb;AAAA;AAAA;AAAA;AAAA,aArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA8BH,CApCD;;GAAMF,S;;KAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport ModalVideo from 'react-modal-video';\n\nconst IntoVideo = () => {\n    // Popup Video\n\tconst [isOpen, setIsOpen] = React.useState(true);\n    const openModal = () => {\n        setIsOpen(!isOpen);\n    }\n    return (\n        <React.Fragment>\n            <div className=\"video-box\">\n                <div className=\"image\">\n                    <img src=\"/images/video-img1.jpg\" className=\"shadow\" alt=\"image\" />\n                </div>\n \n                <Link href=\"#play-video\">\n                    <a\n                        onClick={e => {e.preventDefault(); openModal()}}\n                        className=\"video-btn popup-youtube\"\n                    > \n                        <i className=\"flaticon-play\"></i>\n                    </a>\n                </Link>\n\n                <div className=\"shape10\">\n                    <img src=\"/images/shape9.png\" alt=\"image\" />\n                </div>\n            </div>\n\n            {/* If you want to change the video need to update videoID */}\n            <ModalVideo \n                channel='youtube' \n                isOpen={!isOpen} \n                videoId='bk7McNUjWgw' \n                onClose={() => setIsOpen(!isOpen)} \n            />\n        </React.Fragment>\n    )\n}\n\nexport default IntoVideo;"]},"metadata":{},"sourceType":"module"}